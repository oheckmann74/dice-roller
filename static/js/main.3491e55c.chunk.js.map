{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","root","width","input","DiceRoller","resultJSX","classes","useState","dice","setDice","result","setResult","length","map","count","i","slice","reduce","a","b","Card","className","CardContent","Typography","id","gutterBottom","align","Grid","container","spacing","alignItems","item","xs","Slider","value","onChange","event","newValue","aria-labelledby","min","max","Input","margin","target","Number","onBlur","inputProps","step","type","CardActions","Button","fullWidth","variant","color","onClick","rresult","index","Math","floor","random","startIcon","disabled","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAcMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLD,MAAO,MAKX,SAASE,IACP,IAiCIC,EAjCEC,EAAUP,IADI,EAGIQ,mBAAS,IAHb,mBAGbC,EAHa,KAGPC,EAHO,OAaQF,mBAAS,IAbjB,mBAabG,EAba,KAaLC,EAbK,KA2CpB,OAPEN,EADEK,EAAOE,OAAS,EACNF,EAAOG,KAAI,SAACC,EAAOC,GAAR,OAAc,8BAAIA,EAAE,EAAN,KAAWD,EAAX,SAAwBC,EAAE,EAA1B,MAAgCL,EAAOM,MAAMD,GAAGE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAxE,UAEzB,GAMV,gCACE,eAACC,EAAA,EAAD,CAAMC,UAAWf,EAAQL,KAAzB,UACE,eAACqB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYC,GAAG,eAAeC,cAAY,EAACC,MAAM,OAAjD,4BAGA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAvC,UACG,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,SACC,cAACC,EAAA,EAAD,CACEC,MAAuB,kBAAT1B,EAAoBA,EAAO,EACzC2B,SAjDa,SAACC,EAAOC,GACjC5B,EAAQ4B,IAiDIC,kBAAgB,eAChBC,IAAK,EACLC,IAAK,OAGT,cAACb,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACU,EAAA,EAAD,CACEpB,UAAWf,EAAQH,MACnB+B,MAAO1B,EACPkC,OAAO,QACPP,SAxDY,SAACC,GACzB3B,EAA+B,KAAvB2B,EAAMO,OAAOT,MAAe,GAAKU,OAAOR,EAAMO,OAAOT,SAwDjDW,OA1CK,WACbrC,EAAO,GACTC,EAAQ,IAyCEqC,WAAY,CACVC,KAAM,EACNR,IAAK,EACLC,IAAK,IACLQ,KAAM,SACN,kBAAmB,0BAO3B,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,QAAQ,YAAYC,MAAM,UAAUC,QAjEjD,WAEf,IADA,IAAIC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACrBC,EAAQ,EAAGA,EAAQhD,EAAMgD,IAAS,CAEvCD,EADWE,KAAKC,MAAoB,EAAdD,KAAKE,UAAY,EAC1B,KAEjBhD,EAAU4C,IA2DyEK,UAAW,cAAC,IAAD,IAApF,kBACA,cAACV,EAAA,EAAD,CAAQI,QAnDN,WACZ3C,EAAU,KAkDwBkD,SAAUnD,EAAOE,OAAS,QAAekD,GAAVpD,EAAvD,yBAIJ,8BACGL,OAkBE0D,MAVf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACjB,EAAD,SCrHR4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3491e55c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 375,\n  },\n  input: {\n    width: 42,\n  },\n});\n\n\nfunction DiceRoller() {\n  const classes = useStyles();\n\n  const [dice, setDice] = useState(10);\n\n  const handleSliderChange = (event, newValue) => {\n    setDice(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setDice(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const [result, setResult] = useState([]);\n\n  const rollDice = () => {\n    let rresult = [0, 0, 0, 0, 0, 0]\n    for (let index = 0; index < dice; index++) {\n        let roll = Math.floor(Math.random()*6)+1;\n        rresult[roll-1]++;\n    }\n    setResult(rresult);\n  }\n\n  const handleBlur = () => {\n    if (dice < 1) {\n      setDice(1);\n    } \n  };\n\n  const reset = () => {\n    setResult([]);\n  }\n\n  let resultJSX;\n  if (result.length > 0) {\n    resultJSX = result.map((count, i) => <p>{i+1}: {count}x     {i+1}+: {result.slice(i).reduce((a, b) => a + b, 0)}x</p>)\n  } else {\n    resultJSX = \"\";\n  }\n\n\n\n  return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n          <Typography id=\"input-slider\" gutterBottom align='left'>\n                    Number of Dice\n          </Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n             <Grid item xs>\n              <Slider\n                value={typeof dice === 'number' ? dice : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={30}\n              />\n            </Grid>\n            <Grid item>\n              <Input\n                className={classes.input}\n                value={dice}\n                margin=\"dense\"\n                onChange={handleInputChange}\n                onBlur={handleBlur}\n                inputProps={{\n                  step: 5,\n                  min: 1,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </Grid>\n              \n          </Grid>\n          </CardContent>\n          <CardActions>\n              <Button fullWidth variant=\"contained\" color=\"primary\" onClick={rollDice} startIcon={<CasinoIcon />}>Roll</Button>\n              <Button onClick={reset} disabled={result.length < 1 || result == undefined ? true:false}>Clear</Button>\n          </CardActions>\n        </Card>\n          \n          <div>\n            {resultJSX}\n          </div>\n          \n      </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DiceRoller />\n       </header>\n     </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}