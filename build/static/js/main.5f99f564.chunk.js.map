{"version":3,"sources":["App.js","index.js"],"names":["BUTTONS","useStyles","makeStyles","root","width","margin","input","ResultCard","props","classes","result","num","cum_results","map","count","i","slice","reduce","a","b","Card","className","CardContent","Grid","container","spacing","alignItems","item","xs","Typography","align","parseInt","IconButton","color","onClick","setDice","DiceRoller","useState","dice","setResult","setNum","id","gutterBottom","Slider","value","onChange","event","newValue","aria-labelledby","min","max","Input","target","Number","onBlur","inputProps","step","type","CardActions","Button","fullWidth","variant","setTimeout","rresult","index","Math","floor","random","startIcon","disabled","length","undefined","Collapse","in","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f99f564.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport LooksOneRoundedIcon from \"@material-ui/icons/LooksOneRounded\";\nimport LooksTwoRoundedIcon from \"@material-ui/icons/LooksTwoRounded\";\nimport Looks3RoundedIcon from \"@material-ui/icons/Looks3Rounded\";\nimport Looks4RoundedIcon from \"@material-ui/icons/Looks4Rounded\";\nimport Looks5RoundedIcon from \"@material-ui/icons/Looks5Rounded\";\nimport Looks6RoundedIcon from \"@material-ui/icons/Looks6Rounded\";\nimport ForwardIcon from \"@material-ui/icons/Forward\";\nimport { IconButton } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { TimerOutlined } from \"@material-ui/icons\";\n\nconst BUTTONS = [\n  <LooksOneRoundedIcon />,\n  <LooksTwoRoundedIcon />,\n  <Looks3RoundedIcon />,\n  <Looks4RoundedIcon />,\n  <Looks5RoundedIcon />,\n  <Looks6RoundedIcon />,\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: 375,\n    margin: 10,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nfunction ResultCard(props) {\n  const classes = useStyles();\n  const result = props.result;\n  const num = props.num;\n  const cum_results = result.map((count, i) =>\n    result.slice(i).reduce((a, b) => a + b)\n  );\n  return (\n    <div {...props}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={3}>\n              <Typography>Dice Rolls</Typography>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={6}>\n              <Typography>Success/Failure</Typography>\n            </Grid>\n            <Grid item xs={1}>\n              <Typography>#{num}</Typography>\n            </Grid>\n          </Grid>\n\n          {result.map((count, i) => (\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={1}>\n                <Typography align=\"right\">\n                  {count > 0 ? parseInt(count) + \"x\" : \"\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={1}>\n                {BUTTONS[i]}\n              </Grid>\n              <Grid item xs={2}></Grid>\n              <Grid item xs={3}>\n                {BUTTONS[i]}\n                {i < 5 ? BUTTONS[5] : \"\"}\n              </Grid>\n              <Grid item xs={3}>\n                <Typography>\n                  {cum_results[i]}s ({cum_results[0] - cum_results[i]}f)\n                </Typography>\n              </Grid>\n              <Grid item xs={1}>\n                {cum_results[i] === 0 ? (\n                  \"\"\n                ) : (\n                  <IconButton\n                    color=\"primary\"\n                    onClick={() => props.setDice(cum_results[i])}\n                  >\n                    <ForwardIcon />\n                  </IconButton>\n                )}\n              </Grid>\n            </Grid>\n          ))}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction DiceRoller() {\n  const classes = useStyles();\n\n  const [dice, setDice] = useState(10);\n\n  const handleSliderChange = (event, newValue) => {\n    setDice(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setDice(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  const [result, setResult] = useState([]);\n  const [num, setNum] = useState(0);\n\n  const rollDice = () => {\n    setResult([]);\n    setTimeout(() => {\n      let rresult = [0, 0, 0, 0, 0, 0];\n      for (let index = 0; index < dice; index++) {\n        let roll = Math.floor(Math.random() * 6) + 1;\n        rresult[roll - 1]++;\n      }\n      setResult(rresult);\n      setNum(num + 1);\n    }, 200);\n  };\n\n  const handleBlur = () => {\n    if (dice < 1) {\n      setDice(1);\n    }\n  };\n\n  const reset = () => {\n    setResult([]);\n  };\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography id=\"input-slider\" gutterBottom align=\"left\">\n            Number of Dice\n          </Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs>\n              <Slider\n                value={typeof dice === \"number\" ? dice : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={24}\n              />\n            </Grid>\n            <Grid item>\n              <Input\n                className={classes.input}\n                value={dice}\n                margin=\"dense\"\n                onChange={handleInputChange}\n                onBlur={handleBlur}\n                inputProps={{\n                  step: 5,\n                  min: 1,\n                  max: 100,\n                  type: \"number\",\n                  \"aria-labelledby\": \"input-slider\",\n                }}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={rollDice}\n            startIcon={<CasinoIcon />}\n          >\n            Roll\n          </Button>\n          <Button\n            onClick={reset}\n            disabled={result.length < 1 || result === undefined ? true : false}\n          >\n            Clear\n          </Button>\n        </CardActions>\n      </Card>\n\n      <Collapse in={result.length > 0}>\n        <ResultCard result={result} setDice={setDice} num={num} />\n      </Collapse>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DiceRoller />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}