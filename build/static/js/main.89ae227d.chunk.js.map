{"version":3,"sources":["App.js","index.js"],"names":["BUTTONS","useStyles","makeStyles","root","width","margin","input","ResultCard","props","classes","result","cum_results","map","count","i","slice","reduce","a","b","Collapse","in","Card","className","CardContent","Grid","container","spacing","alignItems","item","xs","Typography","align","parseInt","IconButton","color","onClick","setDice","DiceRoller","useState","dice","setResult","id","gutterBottom","Slider","value","onChange","event","newValue","aria-labelledby","min","max","Input","target","Number","onBlur","inputProps","step","type","CardActions","Button","fullWidth","variant","rresult","index","Math","floor","random","startIcon","disabled","length","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ae227d.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport LooksOneRoundedIcon from '@material-ui/icons/LooksOneRounded';\nimport LooksTwoRoundedIcon from '@material-ui/icons/LooksTwoRounded';\nimport Looks3RoundedIcon from '@material-ui/icons/Looks3Rounded';\nimport Looks4RoundedIcon from '@material-ui/icons/Looks4Rounded';\nimport Looks5RoundedIcon from '@material-ui/icons/Looks5Rounded';\nimport Looks6RoundedIcon from '@material-ui/icons/Looks6Rounded';\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport { IconButton } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst BUTTONS = [<LooksOneRoundedIcon/>, <LooksTwoRoundedIcon/>, <Looks3RoundedIcon/>, <Looks4RoundedIcon/>, <Looks5RoundedIcon/>, <Looks6RoundedIcon/>]\n\nconst useStyles = makeStyles({\n  root: {\n    width: 375,\n    margin: 10,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nfunction ResultCard(props) {\n  const classes = useStyles();\n  const result = props.result;\n  const cum_results = result.map((count, i) => result.slice(i).reduce((a, b) => a + b));\n  return (\n    <Collapse in={true}>\n    <Card className={classes.root}>\n    <CardContent>\n      <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={3}><Typography>Dice Rolls</Typography></Grid>\n          <Grid item xs={1}></Grid> \n          <Grid item xs={7}><Typography>Success/Failure</Typography></Grid>\n      </Grid>\n      \n        {\n          result.map((count, i) => (\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={1}><Typography align='right'>{count > 0 ? parseInt(count)+'x' : ''}</Typography></Grid>\n              <Grid item xs={1}>{BUTTONS[i]}</Grid>\n              <Grid item xs={2}></Grid> \n              <Grid item xs={3}>{BUTTONS[i]}{i < 5 ? BUTTONS[5] : ''}</Grid>\n              <Grid item xs={3}><Typography>{cum_results[i]}s ({cum_results[0]-cum_results[i]}f)</Typography></Grid>\n              <Grid item xs={1}>{cum_results[i] === 0 ? \"\" : <IconButton color=\"primary\" onClick={() => props.setDice(cum_results[i])}><ForwardIcon /></IconButton>}</Grid>\n            </Grid>\n          ))\n        }\n      \n    </CardContent>\n    </Card>\n    </Collapse>\n  )\n}\n\nfunction DiceRoller() {\n  const classes = useStyles();\n\n  const [dice, setDice] = useState(10);\n\n  const handleSliderChange = (event, newValue) => {\n    setDice(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setDice(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const [result, setResult] = useState([]);\n\n  const rollDice = () => {\n    let rresult = [0, 0, 0, 0, 0, 0]\n    for (let index = 0; index < dice; index++) {\n        let roll = Math.floor(Math.random()*6)+1;\n        rresult[roll-1]++;\n    }\n    setResult(rresult);\n  }\n\n  const handleBlur = () => {\n    if (dice < 1) {\n      setDice(1);\n    } \n  };\n\n  const reset = () => {\n    setResult([]);\n  }\n\n  return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n          <Typography id=\"input-slider\" gutterBottom align='left'>\n                    Number of Dice\n          </Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n             <Grid item xs>\n              <Slider\n                value={typeof dice === 'number' ? dice : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={30}\n              />\n            </Grid>\n            <Grid item>\n              <Input\n                className={classes.input}\n                value={dice}\n                margin=\"dense\"\n                onChange={handleInputChange}\n                onBlur={handleBlur}\n                inputProps={{\n                  step: 5,\n                  min: 1,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </Grid>\n              \n          </Grid>\n          </CardContent>\n          <CardActions>\n              <Button fullWidth variant=\"contained\" color=\"primary\" onClick={rollDice} startIcon={<CasinoIcon />}>Roll</Button>\n              <Button onClick={reset} disabled={result.length < 1 || result === undefined ? true:false}>Clear</Button>\n          </CardActions>\n        </Card>\n          \n        {(result.length < 1 || result === undefined) ? \"\" : <ResultCard result={result} setDice={setDice}/>}\n          \n      </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DiceRoller />\n       </header>\n     </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}